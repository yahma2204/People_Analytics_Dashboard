"September", "October", "November", "December")),
Day.of.the.week=factor(Day.of.the.week,labels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")),
Seasons = factor(Seasons, labels = c("summer", "autumn", "winter", "spring")),
Disciplinary.failure=factor(Disciplinary.failure, levels = c(0,1),labels = c("No", "Yes")),
Education=factor(Education, labels = c("high school", "graduate", "postgraduate", "master and doctor")),
Social.smoker=factor(Social.smoker, labels = c("No", "Yes")),
Social.drinker=factor(Social.drinker, labels = c("No", "Yes")),
Absenteeism.time.in.hours=factor(Absenteeism.time.in.hours, levels = c("<3", "3-6", "6-9", ">9")),
ID = as.character(ID),
Work.load.Average.day = str_replace_all(Work.load.Average.day, pattern = ',', '.'),
Work.load.Average.day = as.numeric(Work.load.Average.day)) %>%
na.omit()
# Train Test Split
set.seed(123)
index_absent <-  sample(x = nrow(absent_clean), size = 0.8*nrow(absent_clean))
absent_train <- absent_clean[index_absent,]
absent_test <- absent_clean[-index_absent,]
# UpSampling
absent_up <- upSample(x = absent_train %>% select(-Absenteeism.time.in.hours),
y = absent_train$Absenteeism.time.in.hours, yname = "Absenteeism.time.in.hours")
# Model Fitting
absent_rf <- readRDS(url("https://github.com/yahma2204/People_Analytics_Dashboard/blob/main/absent_rf2.rds?raw=true"))
# Predict
absent_train$pred_absent <- predict(object = absent_rf, newdata = absent_train, type = "raw")
# Output
test_x_absent <- absent_train %>%
select(-Absenteeism.time.in.hours, -pred_absent)
explain_absent <- lime(x = test_x_absent, model = absent_rf)
# 1. TotalWorkingYears
plot_exp1 <- employ_train %>% select(TotalWorkingYears) %>%
# mutate(binning_workingyears = as.factor(
#   ifelse(TotalWorkingYears <= 4, "0-4",
#          ifelse((TotalWorkingYears >= 5 & TotalWorkingYears <= 9), "5-9",
#                 ifelse((TotalWorkingYears >= 10 & TotalWorkingYears <= 14), "10-14",
#                        ifelse((TotalWorkingYears >= 15 & TotalWorkingYears <= 19), "15-19",
#                               ifelse((TotalWorkingYears >= 20 & TotalWorkingYears <= 24), "20-24",
#                                      ifelse((TotalWorkingYears >= 25 & TotalWorkingYears <= 29), "25-29",
#                                             ifelse((TotalWorkingYears >= 26 & TotalWorkingYears <= 29), "26-29",
#                                                    ifelse((TotalWorkingYears >= 30 & TotalWorkingYears <= 34), "30-34",
#                                                           ifelse((TotalWorkingYears >= 35 & TotalWorkingYears <= 39), "35-39", ">=40"
#                                                           )
#                                                    )
#                                             )
#                                      )
#                               )
#                        )
#                 )
#          )
#   )
# )
# ) %>%
# count(binning_workingyears, Attrition) %>%
# mutate(label = glue('Total Working Years : {binning_workingyears}
#                     Attrition? : {Attrition}
#                     Total Employee : {n}')) %>%
ggplot(aes(y=TotalWorkingYears
# factor(binning_workingyears, levels = c("0-4", "5-9", "10-14", "15-19", "20-24",
#                                         "25-29", "26-29", "30-34", "35-39", ">=40")),
, fill = "#6e1524")) +
geom_density()
d1_plotly <- ggplotly(plot_exp1, tooltip = "text") %>% add_annotations(
text = "Total Working Experience",
x = 0.5,
y = 1,
yref = "paper",
xref = "paper",
xanchor = "center",
yanchor = "top",
yshift = 20,
showarrow = FALSE,
font = list(size = 15)
)
plot_exp1
employ_train %>% select(TotalWorkingYears)
employ_train %>% select(TotalWorkingYears) %>%
# mutate(binning_workingyears = as.factor(
#   ifelse(TotalWorkingYears <= 4, "0-4",
#          ifelse((TotalWorkingYears >= 5 & TotalWorkingYears <= 9), "5-9",
#                 ifelse((TotalWorkingYears >= 10 & TotalWorkingYears <= 14), "10-14",
#                        ifelse((TotalWorkingYears >= 15 & TotalWorkingYears <= 19), "15-19",
#                               ifelse((TotalWorkingYears >= 20 & TotalWorkingYears <= 24), "20-24",
#                                      ifelse((TotalWorkingYears >= 25 & TotalWorkingYears <= 29), "25-29",
#                                             ifelse((TotalWorkingYears >= 26 & TotalWorkingYears <= 29), "26-29",
#                                                    ifelse((TotalWorkingYears >= 30 & TotalWorkingYears <= 34), "30-34",
#                                                           ifelse((TotalWorkingYears >= 35 & TotalWorkingYears <= 39), "35-39", ">=40"
#                                                           )
#                                                    )
#                                             )
#                                      )
#                               )
#                        )
#                 )
#          )
#   )
# )
# ) %>%
# count(binning_workingyears, Attrition) %>%
# mutate(label = glue('Total Working Years : {binning_workingyears}
#                     Attrition? : {Attrition}
#                     Total Employee : {n}')) %>%
ggplot(aes(y=TotalWorkingYears
# factor(binning_workingyears, levels = c("0-4", "5-9", "10-14", "15-19", "20-24",
#                                         "25-29", "26-29", "30-34", "35-39", ">=40")),
, fill = "#6e1524")) +
geom_density()
# factor(binning_workingyears, levels = c("0-4", "5-9", "10-14", "15-19", "20-24",
#                                         "25-29", "26-29", "30-34", "35-39", ">=40")),
, fill = "#6e1524", text = TotalWorkingYears)) +
geom_density()
# 1. TotalWorkingYears
plot_exp1 <- employ_train %>% select(TotalWorkingYears) %>%
# mutate(binning_workingyears = as.factor(
#   ifelse(TotalWorkingYears <= 4, "0-4",
#          ifelse((TotalWorkingYears >= 5 & TotalWorkingYears <= 9), "5-9",
#                 ifelse((TotalWorkingYears >= 10 & TotalWorkingYears <= 14), "10-14",
#                        ifelse((TotalWorkingYears >= 15 & TotalWorkingYears <= 19), "15-19",
#                               ifelse((TotalWorkingYears >= 20 & TotalWorkingYears <= 24), "20-24",
#                                      ifelse((TotalWorkingYears >= 25 & TotalWorkingYears <= 29), "25-29",
#                                             ifelse((TotalWorkingYears >= 26 & TotalWorkingYears <= 29), "26-29",
#                                                    ifelse((TotalWorkingYears >= 30 & TotalWorkingYears <= 34), "30-34",
#                                                           ifelse((TotalWorkingYears >= 35 & TotalWorkingYears <= 39), "35-39", ">=40"
#                                                           )
#                                                    )
#                                             )
#                                      )
#                               )
#                        )
#                 )
#          )
#   )
# )
# ) %>%
# count(binning_workingyears, Attrition) %>%
# mutate(label = glue('Total Working Years : {binning_workingyears}
#                     Attrition? : {Attrition}
#                     Total Employee : {n}')) %>%
ggplot(aes(x=TotalWorkingYears
# factor(binning_workingyears, levels = c("0-4", "5-9", "10-14", "15-19", "20-24",
#                                         "25-29", "26-29", "30-34", "35-39", ">=40")),
, fill = "#6e1524", text = TotalWorkingYears)) +
geom_density()
d1_plotly <- ggplotly(plot_exp1, tooltip = "text") %>% add_annotations(
text = "Total Working Experience",
x = 0.5,
y = 1,
yref = "paper",
xref = "paper",
xanchor = "center",
yanchor = "top",
yshift = 20,
showarrow = FALSE,
font = list(size = 15)
)
d1_plotly
# factor(binning_workingyears, levels = c("0-4", "5-9", "10-14", "15-19", "20-24",
#                                         "25-29", "26-29", "30-34", "35-39", ">=40")),
, text = TotalWorkingYears), fill = "#6e1524") +
geom_density()
# factor(binning_workingyears, levels = c("0-4", "5-9", "10-14", "15-19", "20-24",
#                                         "25-29", "26-29", "30-34", "35-39", ">=40")),
, text = TotalWorkingYears), fill = "#6e1524") +
geom_density()
d1_plotly <- ggplotly(plot_exp1, tooltip = "text") %>% add_annotations(
text = "Total Working Experience",
x = 0.5,
y = 1,
yref = "paper",
xref = "paper",
xanchor = "center",
yanchor = "top",
yshift = 20,
showarrow = FALSE,
font = list(size = 15)
)
# 1. TotalWorkingYears
plot_exp1 <- employ_train %>% select(TotalWorkingYears) %>%
# mutate(binning_workingyears = as.factor(
#   ifelse(TotalWorkingYears <= 4, "0-4",
#          ifelse((TotalWorkingYears >= 5 & TotalWorkingYears <= 9), "5-9",
#                 ifelse((TotalWorkingYears >= 10 & TotalWorkingYears <= 14), "10-14",
#                        ifelse((TotalWorkingYears >= 15 & TotalWorkingYears <= 19), "15-19",
#                               ifelse((TotalWorkingYears >= 20 & TotalWorkingYears <= 24), "20-24",
#                                      ifelse((TotalWorkingYears >= 25 & TotalWorkingYears <= 29), "25-29",
#                                             ifelse((TotalWorkingYears >= 26 & TotalWorkingYears <= 29), "26-29",
#                                                    ifelse((TotalWorkingYears >= 30 & TotalWorkingYears <= 34), "30-34",
#                                                           ifelse((TotalWorkingYears >= 35 & TotalWorkingYears <= 39), "35-39", ">=40"
#                                                           )
#                                                    )
#                                             )
#                                      )
#                               )
#                        )
#                 )
#          )
#   )
# )
# ) %>%
# count(binning_workingyears, Attrition) %>%
# mutate(label = glue('Total Working Years : {binning_workingyears}
#                     Attrition? : {Attrition}
#                     Total Employee : {n}')) %>%
ggplot(aes(x=TotalWorkingYears
# factor(binning_workingyears, levels = c("0-4", "5-9", "10-14", "15-19", "20-24",
#                                         "25-29", "26-29", "30-34", "35-39", ">=40")),
, text = TotalWorkingYears), fill = "#6e1524") +
geom_density()
d1_plotly <- ggplotly(plot_exp1, tooltip = "text") %>% add_annotations(
text = "Total Working Experience",
x = 0.5,
y = 1,
yref = "paper",
xref = "paper",
xanchor = "center",
yanchor = "top",
yshift = 20,
showarrow = FALSE,
font = list(size = 15)
)
d1_plotly
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
remove.packages("rlang")
install.packages("rlang")
library(rlang)
library(dplyr)
install.packages("rlang")
remove.packages("rlang")
install.packages("rlang")
library(rlang)
library(dplyr)
library(rlang)
install.packages("installr")
library(installr)
updateR()
updateR()
shiny::runApp()
remove.packages("rlang")
remove.packages("dplyr")
install.packages("rlang")
install.packages("dplyr")
library(rlang)
library(dplyr)
install.packages("rlang")
install.packages("dplyr")
shiny::runApp()
remove.packages("dplyr")
install.packages("dplyr")
runApp()
library(dplyr)
install.packages("dplyr")
library(dplyr)
install.packages(c("dplyr"))
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
.libPaths()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp('~/Algoritma beasiswa/INTERNSHIP/Analyst Intern/People Analytics Dashboard/People_Analytics_Dashboard/People_Analytics_Dashboard')
runApp('~/Algoritma beasiswa/INTERNSHIP/Analyst Intern/People Analytics Dashboard/People_Analytics_Dashboard/People_Analytics_Dashboard')
# EMPLOYEE ATTRITION ---------------------------------------------------------------
url <- "https://raw.githubusercontent.com/MohammadBakir/IBM-Employee-Attrition-Classification/master/data/ibm.csv"
# DATA
employ <- read.table(url(url), stringsAsFactors = T)
runApp()
# DATA
employ <- read.csv("WA_Fn-UseC_-HR-Employee-Attrition.csv", stringsAsFactors = T)
employ_clean <- employ %>%
mutate(Education = factor(Education, labels = c('Below College','College', 'Bachelor', 'Master', 'Doctor')),
EnvironmentSatisfaction = factor(EnvironmentSatisfaction, labels = c('Low','Medium','High','Very High')),
JobInvolvement = factor(JobInvolvement, labels = c('Low' ,'Medium' ,'High', 'Very High')),
JobSatisfaction = factor(JobSatisfaction, labels = c('Low', 'Medium','High','Very High')),
PerformanceRating = factor(PerformanceRating, levels = c(1,2,3,4),labels = c('Low', 'Good','Excellent','Outstanding')),
RelationshipSatisfaction = factor(RelationshipSatisfaction, labels = c('Low', 'Medium', 'High', 'Very High')),
WorkLifeBalance = factor(WorkLifeBalance, labels = c('Bad','Good', 'Better','Best')),
Attrition = factor(Attrition, labels = c('No','Yes')),
OverTime = factor(OverTime, labels = c("No", "Yes")))%>%
select(-c(Over18, StandardHours, EmployeeCount))
rownames(employ_clean) <- employ$EmployeeNumber
set.seed(123)
index <-  sample(x = nrow(employ_clean), size = 0.8*nrow(employ_clean))
employ_train <- employ_clean[index,]
employ_test <- employ_clean[-index,]
# UPSAMPLE
employ_up <- upSample(x = employ_train %>%
select(-Attrition),
y = employ_train$Attrition,
yname = "Attrition")
# Random Forest Model
model_forest <- readRDS(url("https://github.com/yahma2204/People_Analytics_Dashboard/blob/main/model_forest.rds?raw=true"))
# Prediction
employ_train$is_Attrition <- predict(object = model_forest, newdata = employ_train, type = "raw")
employ_train$prob_Attrition <- predict(object = model_forest, newdata = employ_train, type = "prob")[,2]
# Interpretation
employ_testing <- employ_train %>%
select(-c(Attrition, is_Attrition, prob_Attrition, EmployeeNumber))
explain <- lime(x = employ_testing, model = model_forest)
# DATA
promote <- read.csv(url("https://raw.githubusercontent.com/titov-vladislav/HR-promote-predictions/master/raw_data/train.csv"), fileEncoding = "UTF-8",stringsAsFactors = T)
promote_test_data <- read.csv(url("https://raw.githubusercontent.com/titov-vladislav/HR-promote-predictions/master/raw_data/test.csv"))
promote_clean <- promote %>%
mutate(is_promoted=factor(is_promoted, labels = c("No", "Yes")),
awards_won. = factor(awards_won., labels = c("No", "Yes"))) %>%
select(-KPIs_met..80.) %>%
na.omit() %>%
filter(education != "")
rownames(promote_clean) <- promote_clean$employee_id
promoteClean <- promote_clean
set.seed(123)
index_promote <-  sample(x = nrow(promoteClean), size = 0.6*nrow(promoteClean))
promote_train <- promoteClean[index_promote,]
promote_test <- promoteClean[-index_promote,]
# UpSample
promote_up <- upSample(x = promote_train %>%
select(-is_promoted),
y = promote_train$is_promoted,
yname = "is_promoted")
# prediction
promote_rf <- readRDS(url("https://github.com/yahma2204/People_Analytics_Dashboard/blob/main/promote_rf4.rds?raw=true"))
# Model Evaluation
promoteClean$promoted <- predict(object = promote_rf, newdata = promoteClean, type = "raw")
# prediction
promote_rf <- readRDS(url("https://github.com/yahma2204/People_Analytics_Dashboard/blob/main/promote_rf4.rds?raw=true"))
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp('~/Algoritma beasiswa/INTERNSHIP/Analyst Intern/People Analytics Dashboard/People_Analytics_Dashboard/People_Analytics_Dashboard')
runApp('~/Algoritma beasiswa/INTERNSHIP/Analyst Intern/People Analytics Dashboard/People_Analytics_Dashboard/People_Analytics_Dashboard')
shiny::runApp('~/Algoritma beasiswa/INTERNSHIP/Analyst Intern/People Analytics Dashboard/People_Analytics_Dashboard/People_Analytics_Dashboard')
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
var_imp_employ <- data.frame(varImp(model_forest)$importance) %>%
rename(Importance = Overall)
var_imp_employ$Variable <- rownames(var_imp_employ)
rownames(var_imp_employ) <- NULL
var_imp_plot <- var_imp_employ %>% head(10) %>%
mutate(label = glue("Variable = {Variable}
Importance = {Importance}"))
ggplot(aes(y = reorder(Variable,Importance), x = Importance), text = label) +
geom_col(fill = "#590202")+
labs(y = NULL)+
scale_y_continuous(expand = expand_scale(mult = c(0, 0.1))) +
scale_fill_viridis_c()+
theme_minimal()
var_imp_plot <- var_imp_employ %>% head(10) %>%
mutate(label = glue("Variable = {Variable}
Importance = {Importance}")) %>%
ggplot(aes(y = reorder(Variable,Importance), x = Importance), text = label) +
geom_col(fill = "#590202")+
labs(y = NULL)+
scale_y_continuous(expand = expand_scale(mult = c(0, 0.1))) +
scale_fill_viridis_c()+
theme_minimal()
ggplotly(var_imp_plot, tooltip="text")
var_imp_plot <- var_imp_employ %>% head(10) %>%
mutate(label = glue("Variable = {Variable}
Importance = {Importance}")) %>%
ggplot(aes(y = reorder(Variable,Importance), x = Importance), text = label) +
geom_col(fill = "#590202")+
labs(y = NULL) +
scale_fill_viridis_c()+
theme_minimal()
ggplotly(var_imp_plot, tooltip="text")
var_imp_employ %>% head(10) %>%
mutate(label = glue("Variable = {Variable}
Importance = {Importance}"))
var_imp_plot <- var_imp_employ %>% head(10) %>%
mutate(Importance = round(Importance, 22),
label = glue("Variable = {Variable}
Importance = {Importance}")) %>%
ggplot(aes(y = reorder(Variable,Importance), x = Importance), text = label) +
geom_col(fill = "#590202")+
labs(y = NULL) +
scale_fill_viridis_c()+
theme_minimal()
ggplotly(var_imp_plot, tooltip="text")
var_imp_plot <- var_imp_employ %>% head(10) %>%
mutate(Importance = round(Importance, 22),
label = glue("Variable = {Variable}
Importance = {Importance}")) %>%
ggplot(aes(y = reorder(Variable,Importance), x = Importance, text = label)) +
geom_col(fill = "#590202")+
labs(y = NULL) +
scale_fill_viridis_c()+
theme_minimal()
ggplotly(var_imp_plot, tooltip="text")
var_imp_plot <- var_imp_employ %>% head(10) %>%
mutate(Importance = round(Importance, 2),
label = glue("Variable = {Variable}
Importance = {Importance}")) %>%
ggplot(aes(y = reorder(Variable,Importance), x = Importance, text = label)) +
geom_col(fill = "#590202")+
labs(y = NULL) +
scale_fill_viridis_c()+
theme_minimal()
ggplotly(var_imp_plot, tooltip="text")
plot_employ <- employ_train %>%
select(is_Attrition) %>%
count(is_Attrition) %>%
mutate(label = glue("Attrition? : {is_Attrition}
Total Employee : {n}")) %>%
ggplot(aes(x = is_Attrition, y = n, text = label))+
geom_col(fill = "#590202")
ggplotly(plot_employ, tooltip = "text")
runApp()
plot_employ <- employ_train %>%
select(is_Attrition) %>%
count(is_Attrition) %>%
mutate(label = glue("Attrition? : {is_Attrition}
Total Employee : {n}"))
plot_employ <- employ_train %>%
select(is_Attrition) %>%
count(is_Attrition) %>%
mutate(label = glue("Attrition? : {is_Attrition}
Total Employee : {n}"))
fig <- plot_ly(plot_employ, labels = ~is_Attrition, values = ~n, type = 'pie')
fig <- fig %>% layout(title = 'United States Personal Expenditures by Categories in 1960',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
fig <- plot_ly(plot_employ, labels = ~is_Attrition, values = ~n, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('Total Employee : ', n),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),)
fig <- fig %>% layout(title = 'United States Personal Expenditures by Categories in 1960',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig <- plot_ly(plot_employ, labels = ~is_Attrition, values = ~n, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('Total Employee : ', n),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)))
fig <- fig %>% layout(title = 'United States Personal Expenditures by Categories in 1960',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
fig <- plot_ly(plot_employ, labels = ~is_Attrition, values = ~n, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('Total Employee : ', n),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
fig <- fig %>% layout(title = 'Employee Attrition',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
plot_employ <- employ_train %>%
select(is_Attrition) %>%
count(is_Attrition) %>%
mutate(label = glue("Attrition? : {is_Attrition}
Total Employee : {n}"))
colors <- c('#D90416','#260101')
fig <- plot_ly(plot_employ, labels = ~is_Attrition, values = ~n, type = 'pie',
textposition = 'inside',
textinfo = 'label+percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = ~paste('Total Employee : ', n),
marker = list(colors = colors,
line = list(color = '#FFFFFF', width = 1)),
showlegend = FALSE)
fig <- fig %>% layout(title = 'Employee Attrition',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
fig
runApp()
runApp()
shiny::runApp()
employ_clean
employ_clean %>% names()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
